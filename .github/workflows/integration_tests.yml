name: Dbt Unit Testing

on:
  push:
    branches: [master]
  pull_request_target:
    types: [opened, edited]

  workflow_dispatch:

jobs:
  integration-tests-snowflake:
    runs-on: ubuntu-latest
    if: |
      github.event.review.state == 'approved' ||
      github.event_name == 'push' || 
      github.event_name == 'workflow_dispatch'
    environment: test
    env:
      SNOWFLAKE_TEST_ACCOUNT: ${{ secrets.SNOWFLAKE_TEST_ACCOUNT }}
      SNOWFLAKE_TEST_USER: ${{ secrets.SNOWFLAKE_TEST_USER }}
      SNOWFLAKE_TEST_PASSWORD: ${{ secrets.SNOWFLAKE_TEST_PASSWORD }}
      SNOWFLAKE_TEST_ROLE: ${{ secrets.SNOWFLAKE_TEST_ROLE }}
      SNOWFLAKE_TEST_WAREHOUSE: ${{ secrets.SNOWFLAKE_TEST_WAREHOUSE }}

    steps:
      - uses: "actions/checkout@v2"

      - name: test snowflake
        run: ./run_test.sh snowflake

  integration-tests-bigquery:
    runs-on: ubuntu-latest
    if: |
      github.event.review.state == 'approved' ||
      github.event_name == 'push' || 
      github.event_name == 'workflow_dispatch'
    environment: test

    steps:
      - uses: "actions/checkout@v2"

      - id: "auth"
        name: "Authenticate to Google Cloud"
        uses: "google-github-actions/auth@v0"
        with:
          credentials_json: "${{ secrets.GOOGLE_CREDENTIALS }}"

      - name: "Set up Cloud SDK"
        uses: "google-github-actions/setup-gcloud@v0"

      - name: test bigquery
        run: ./run_test.sh bigquery

  integration-tests-postgres:
    runs-on: ubuntu-latest
    if: |
      github.event.review.state == 'approved' ||
      github.event_name == 'push' || 
      github.event_name == 'workflow_dispatch'
    environment: test

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: "actions/checkout@v2"

      - name: test postgres
        run: ./run_test.sh postgres
